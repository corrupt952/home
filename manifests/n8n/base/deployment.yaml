---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  labels:
    app.kubernetes.io/name: n8n
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: n8n
  template:
    metadata:
      labels:
        app.kubernetes.io/name: n8n
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: n8n
          image: docker.n8n.io/n8nio/n8n:1.105.2
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false
          env:
            - name: DB_TYPE
              value: "postgresdb"
            - name: DB_POSTGRESDB_HOST
              value: "postgres.n8n.svc.cluster.local"
            - name: DB_POSTGRESDB_PORT
              value: "5432"
          envFrom:
            - secretRef:
                name: n8n-credentials
          ports:
            - name: http
              containerPort: 5678
              protocol: TCP
          volumeMounts:
            - name: n8n-data
              mountPath: /home/node/.n8n
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          startupProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: n8n-data
          persistentVolumeClaim:
            claimName: n8n-data
